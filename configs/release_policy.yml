# KASPER MLX Release Policy Configuration
# Controls validation gates for dataset release cards generation
# Supports flexible soft/hard enforcement for development vs. production

version: "2.0"
generated: "2025-08-09"
description: "Policy-driven release validation for KASPER MLX spiritual AI dataset"

# Required structural constraints (always enforced)
required:
  categories: 12                    # Behavioral categories per insight
  insights_per_category: 12         # Insights required per category
  intensity_min: 0.60              # Minimum spiritual intensity score
  intensity_max: 0.90              # Maximum spiritual intensity score

# Gate enforcement levels (soft = warnings, hard = build failures)
gates:
  # Core data integrity (should always be hard)
  determinism: hard                 # Dataset digest consistency
  secrets: hard                     # No leaked credentials/keys
  schema_validation: hard           # JSON schema compliance

  # Quality assurance (can be soft for development)
  duplicate_insights: soft          # Prevent content repetition
  spiritual_authenticity: soft      # Maintain tradition accuracy
  content_completeness: soft        # Full category coverage

# File validation thresholds
thresholds:
  max_file_size_mb: 1.0            # Individual file size limit
  min_insight_length: 50           # Minimum insight character count
  max_insight_length: 500          # Maximum insight character count

# Content quality standards
quality_standards:
  require_source_attribution: true  # Must reference Divine Triangle
  enforce_master_numbers: true      # 11, 22, 33, 44 unreduced
  validate_numerology_accuracy: true # Check against established tradition

# Development workflow support
development:
  allow_incomplete_categories: false # Require all 12 categories
  skip_intensity_validation: false  # Always validate intensity bounds
  enable_debug_output: true         # Verbose validation messages

# CI/CD environment settings
ci_environment:
  enforce_all_gates: true           # Hard enforcement in CI
  timeout_seconds: 300              # Maximum validation time
  fail_fast: true                   # Stop on first critical error

# Local development overrides
local_development:
  soft_mode_available: true         # Allow --soft flag locally
  warning_only_gates:               # These become warnings in --soft mode
    - duplicate_insights
    - spiritual_authenticity
    - content_completeness

# Notification settings
notifications:
  slack_webhook: null               # Future: Slack integration
  email_notifications: false       # Future: Email alerts
  github_status_checks: true       # Update PR status checks

# Metadata validation
metadata_requirements:
  require_generation_date: true     # Must have creation timestamp
  require_version_info: true       # Must specify dataset version
  require_file_count: true         # Must report total files processed
  require_digest_signature: true   # Must include cryptographic digest

# Advanced validation features
advanced_features:
  enable_ai_quality_scoring: false  # Future: LLM judge evaluation
  semantic_duplicate_detection: false # Future: AI-powered content similarity
  spiritual_tone_analysis: false   # Future: Ensure consistent spiritual voice
  cross_reference_validation: false # Future: Check internal consistency

# Evaluation system configuration
eval:
  enabled: false                    # Enable LLM judge evaluation
  threshold: 90                     # Minimum passing score (0-100)
  sample_size: 60                   # Files to evaluate per run
  judge_mode: "stub"               # stub/local/cloud judge configuration
  weights:                         # Scoring dimension weights
    fidelity: 0.35                # Accuracy to numerological tradition
    actionability: 0.25           # Specific, useful guidance
    tone: 0.20                    # Supportive spiritual tone
    safety: 0.20                  # Avoids medical/financial claims
  nightly_evaluation: false        # Run automatic quality assessment
  fail_on_low_scores: false       # Block releases below threshold

# Exception handling
exceptions:
  allowed_edge_cases: []            # Files exempt from certain rules
  grandfathered_files: []           # Legacy content with relaxed rules
  maintenance_mode: false           # Bypass all non-critical validations

# Policy version history:
# v2.0 (2025-08-09): Initial policy-driven configuration
# Future versions will track policy evolution and rule changes
